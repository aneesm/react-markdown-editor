{"version":3,"sources":["component/MarkdownSanitized.js","App.js","reportWebVitals.js","index.js"],"names":["MarkdownSanitized","useState","markDown","setMarkDown","className","value","onChange","e","target","config","markdownConfig","remarkPlugins","gfm","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAsBeA,EAhBW,WACxB,MAAgCC,mBAC9B,yFADF,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,OACE,qCACE,yBAASC,UAAU,iBAAnB,SACE,0BAAUA,UAAU,uBAAuBC,MAAOH,EAAUI,SAAU,SAACC,GAAD,OAAOJ,EAAYI,EAAEC,OAAOH,YAEpG,yBAASD,UAAU,mBAAnB,SACE,cAAC,IAAD,CAAeK,OAAQC,IAAgBC,cAAe,CAACC,KAAvD,SAA8DV,U,OCFvDW,MAVf,WACE,OACE,qBAAKT,UAAU,MAAf,SACE,yBAASA,UAAU,WAAnB,SACE,cAAC,EAAD,SCIOU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ea5a73ba.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport ReactMarkdown from 'react-markdown';\nimport { MarkdownProvider } from 'react-markdown-tree';\nimport gfm from 'remark-gfm'\nimport markdownConfig from 'react-markdown-tree-config-default';\n\nconst MarkdownSanitized = () => {\n  const [markDown, setMarkDown] = useState(\n    '## Hi welcome to Markdown Editor Tool Developed by [Anees](https://github.com/aneesm)'\n  );\n  return (\n    <>\n      <section className=\"markdown-input\">\n        <textarea className=\"markdown-input__type\" value={markDown} onChange={(e) => setMarkDown(e.target.value)}></textarea>\n      </section>\n      <section className=\"markdown-display\">\n        <ReactMarkdown config={markdownConfig} remarkPlugins={[gfm]}>{markDown}</ReactMarkdown>\n      </section>\n    </>\n  )\n}\n\nexport default MarkdownSanitized;\n  ","import MarkdownSanitized from './component/MarkdownSanitized';\n\nimport './scss/style.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <section className=\"markdown\">\n        <MarkdownSanitized/>\n      </section>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}